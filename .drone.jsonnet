local pipeline = import 'pipeline.libsonnet';
local name = 'webhippie/golang';

[
  pipeline.build(name, 'latest', 'amd64'),
  pipeline.build(name, 'latest', 'arm32v6'),
  pipeline.build(name, 'latest', 'arm64v8'),
  pipeline.manifest('latest', ['amd64', 'arm32v6', 'arm64v8']),
  pipeline.build(name, '1.12', 'amd64'),
  pipeline.build(name, '1.12', 'arm32v6'),
  pipeline.build(name, '1.12', 'arm64v8'),
  pipeline.manifest('1.12', ['amd64', 'arm32v6', 'arm64v8']),
  pipeline.build(name, '1.11', 'amd64'),
  pipeline.build(name, '1.11', 'arm32v6'),
  pipeline.build(name, '1.11', 'arm64v8'),
  pipeline.manifest('1.11', ['amd64', 'arm32v6', 'arm64v8']),
  pipeline.build(name, '1.10', 'amd64'),
  pipeline.build(name, '1.10', 'arm32v6'),
  pipeline.build(name, '1.10', 'arm64v8'),
  pipeline.manifest('1.10', ['amd64', 'arm32v6', 'arm64v8']),
  pipeline.build(name, '1.9', 'amd64'),
  pipeline.build(name, '1.9', 'arm32v6'),
  pipeline.build(name, '1.9', 'arm64v8'),
  pipeline.manifest('1.9', ['amd64', 'arm32v6', 'arm64v8']),
  pipeline.build(name, '1.8', 'amd64'),
  pipeline.build(name, '1.8', 'arm32v6'),
  pipeline.build(name, '1.8', 'arm64v8'),
  pipeline.manifest('1.8', ['amd64', 'arm32v6', 'arm64v8']),
  pipeline.build(name, '1.7', 'amd64'),
  pipeline.build(name, '1.7', 'arm32v6'),
  pipeline.build(name, '1.7', 'arm64v8'),
  pipeline.manifest('1.7', ['amd64', 'arm32v6', 'arm64v8']),
  pipeline.build(name, '1.6', 'amd64'),
  pipeline.build(name, '1.6', 'arm32v6'),
  pipeline.build(name, '1.6', 'arm64v8'),
  pipeline.manifest('1.6', ['amd64', 'arm32v6', 'arm64v8']),
  pipeline.microbadger(['latest', '1.12', '1.11', '1.10', '1.9', '1.8', '1.7', '1.6']),
]
